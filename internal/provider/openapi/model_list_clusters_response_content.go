/*
ParallelCluster

ParallelCluster API

API version: 3.10.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListClustersResponseContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListClustersResponseContent{}

// ListClustersResponseContent struct for ListClustersResponseContent
type ListClustersResponseContent struct {
	// Token to use for paginated requests.
	NextToken *string `json:"nextToken,omitempty"`
	Clusters []ClusterInfoSummary `json:"clusters"`
}

type _ListClustersResponseContent ListClustersResponseContent

// NewListClustersResponseContent instantiates a new ListClustersResponseContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListClustersResponseContent(clusters []ClusterInfoSummary) *ListClustersResponseContent {
	this := ListClustersResponseContent{}
	this.Clusters = clusters
	return &this
}

// NewListClustersResponseContentWithDefaults instantiates a new ListClustersResponseContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListClustersResponseContentWithDefaults() *ListClustersResponseContent {
	this := ListClustersResponseContent{}
	return &this
}

// GetNextToken returns the NextToken field value if set, zero value otherwise.
func (o *ListClustersResponseContent) GetNextToken() string {
	if o == nil || IsNil(o.NextToken) {
		var ret string
		return ret
	}
	return *o.NextToken
}

// GetNextTokenOk returns a tuple with the NextToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListClustersResponseContent) GetNextTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextToken) {
		return nil, false
	}
	return o.NextToken, true
}

// HasNextToken returns a boolean if a field has been set.
func (o *ListClustersResponseContent) HasNextToken() bool {
	if o != nil && !IsNil(o.NextToken) {
		return true
	}

	return false
}

// SetNextToken gets a reference to the given string and assigns it to the NextToken field.
func (o *ListClustersResponseContent) SetNextToken(v string) {
	o.NextToken = &v
}

// GetClusters returns the Clusters field value
func (o *ListClustersResponseContent) GetClusters() []ClusterInfoSummary {
	if o == nil {
		var ret []ClusterInfoSummary
		return ret
	}

	return o.Clusters
}

// GetClustersOk returns a tuple with the Clusters field value
// and a boolean to check if the value has been set.
func (o *ListClustersResponseContent) GetClustersOk() ([]ClusterInfoSummary, bool) {
	if o == nil {
		return nil, false
	}
	return o.Clusters, true
}

// SetClusters sets field value
func (o *ListClustersResponseContent) SetClusters(v []ClusterInfoSummary) {
	o.Clusters = v
}

func (o ListClustersResponseContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListClustersResponseContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NextToken) {
		toSerialize["nextToken"] = o.NextToken
	}
	toSerialize["clusters"] = o.Clusters
	return toSerialize, nil
}

func (o *ListClustersResponseContent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"clusters",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListClustersResponseContent := _ListClustersResponseContent{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListClustersResponseContent)

	if err != nil {
		return err
	}

	*o = ListClustersResponseContent(varListClustersResponseContent)

	return err
}

type NullableListClustersResponseContent struct {
	value *ListClustersResponseContent
	isSet bool
}

func (v NullableListClustersResponseContent) Get() *ListClustersResponseContent {
	return v.value
}

func (v *NullableListClustersResponseContent) Set(val *ListClustersResponseContent) {
	v.value = val
	v.isSet = true
}

func (v NullableListClustersResponseContent) IsSet() bool {
	return v.isSet
}

func (v *NullableListClustersResponseContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListClustersResponseContent(val *ListClustersResponseContent) *NullableListClustersResponseContent {
	return &NullableListClustersResponseContent{value: val, isSet: true}
}

func (v NullableListClustersResponseContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListClustersResponseContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
