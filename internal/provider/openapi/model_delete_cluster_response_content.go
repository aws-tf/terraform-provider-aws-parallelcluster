/*
ParallelCluster

ParallelCluster API

API version: 3.11.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DeleteClusterResponseContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteClusterResponseContent{}

// DeleteClusterResponseContent struct for DeleteClusterResponseContent
type DeleteClusterResponseContent struct {
	Cluster ClusterInfoSummary `json:"cluster"`
}

type _DeleteClusterResponseContent DeleteClusterResponseContent

// NewDeleteClusterResponseContent instantiates a new DeleteClusterResponseContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteClusterResponseContent(cluster ClusterInfoSummary) *DeleteClusterResponseContent {
	this := DeleteClusterResponseContent{}
	this.Cluster = cluster
	return &this
}

// NewDeleteClusterResponseContentWithDefaults instantiates a new DeleteClusterResponseContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteClusterResponseContentWithDefaults() *DeleteClusterResponseContent {
	this := DeleteClusterResponseContent{}
	return &this
}

// GetCluster returns the Cluster field value
func (o *DeleteClusterResponseContent) GetCluster() ClusterInfoSummary {
	if o == nil {
		var ret ClusterInfoSummary
		return ret
	}

	return o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value
// and a boolean to check if the value has been set.
func (o *DeleteClusterResponseContent) GetClusterOk() (*ClusterInfoSummary, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cluster, true
}

// SetCluster sets field value
func (o *DeleteClusterResponseContent) SetCluster(v ClusterInfoSummary) {
	o.Cluster = v
}

func (o DeleteClusterResponseContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteClusterResponseContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cluster"] = o.Cluster
	return toSerialize, nil
}

func (o *DeleteClusterResponseContent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cluster",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeleteClusterResponseContent := _DeleteClusterResponseContent{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeleteClusterResponseContent)

	if err != nil {
		return err
	}

	*o = DeleteClusterResponseContent(varDeleteClusterResponseContent)

	return err
}

type NullableDeleteClusterResponseContent struct {
	value *DeleteClusterResponseContent
	isSet bool
}

func (v NullableDeleteClusterResponseContent) Get() *DeleteClusterResponseContent {
	return v.value
}

func (v *NullableDeleteClusterResponseContent) Set(val *DeleteClusterResponseContent) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteClusterResponseContent) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteClusterResponseContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteClusterResponseContent(val *DeleteClusterResponseContent) *NullableDeleteClusterResponseContent {
	return &NullableDeleteClusterResponseContent{value: val, isSet: true}
}

func (v NullableDeleteClusterResponseContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteClusterResponseContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


