/*
ParallelCluster

ParallelCluster API

API version: 3.10.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the DescribeClusterResponseContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DescribeClusterResponseContent{}

// DescribeClusterResponseContent struct for DescribeClusterResponseContent
type DescribeClusterResponseContent struct {
	// Name of the cluster.
	ClusterName string `json:"clusterName"`
	// AWS region where the cluster is created.
	Region string `json:"region"`
	// ParallelCluster version used to create the cluster.
	Version string `json:"version"`
	CloudFormationStackStatus CloudFormationStackStatus `json:"cloudFormationStackStatus"`
	ClusterStatus ClusterStatus `json:"clusterStatus"`
	Scheduler *Scheduler `json:"scheduler,omitempty"`
	// ARN of the main CloudFormation stack.
	CloudformationStackArn string `json:"cloudformationStackArn"`
	// Timestamp representing the cluster creation time.
	CreationTime time.Time `json:"creationTime"`
	// Timestamp representing the last cluster update time.
	LastUpdatedTime time.Time `json:"lastUpdatedTime"`
	ClusterConfiguration ClusterConfigurationStructure `json:"clusterConfiguration"`
	ComputeFleetStatus ComputeFleetStatus `json:"computeFleetStatus"`
	// Tags associated with the cluster.
	Tags []Tag `json:"tags"`
	HeadNode *EC2Instance `json:"headNode,omitempty"`
	LoginNodes *LoginNodesPool `json:"loginNodes,omitempty"`
	// Failures array containing failures reason and code when the stack is in CREATE_FAILED status.
	Failures []Failure `json:"failures,omitempty"`
}

type _DescribeClusterResponseContent DescribeClusterResponseContent

// NewDescribeClusterResponseContent instantiates a new DescribeClusterResponseContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeClusterResponseContent(clusterName string, region string, version string, cloudFormationStackStatus CloudFormationStackStatus, clusterStatus ClusterStatus, cloudformationStackArn string, creationTime time.Time, lastUpdatedTime time.Time, clusterConfiguration ClusterConfigurationStructure, computeFleetStatus ComputeFleetStatus, tags []Tag) *DescribeClusterResponseContent {
	this := DescribeClusterResponseContent{}
	this.ClusterName = clusterName
	this.Region = region
	this.Version = version
	this.CloudFormationStackStatus = cloudFormationStackStatus
	this.ClusterStatus = clusterStatus
	this.CloudformationStackArn = cloudformationStackArn
	this.CreationTime = creationTime
	this.LastUpdatedTime = lastUpdatedTime
	this.ClusterConfiguration = clusterConfiguration
	this.ComputeFleetStatus = computeFleetStatus
	this.Tags = tags
	return &this
}

// NewDescribeClusterResponseContentWithDefaults instantiates a new DescribeClusterResponseContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeClusterResponseContentWithDefaults() *DescribeClusterResponseContent {
	this := DescribeClusterResponseContent{}
	return &this
}

// GetClusterName returns the ClusterName field value
func (o *DescribeClusterResponseContent) GetClusterName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value
// and a boolean to check if the value has been set.
func (o *DescribeClusterResponseContent) GetClusterNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterName, true
}

// SetClusterName sets field value
func (o *DescribeClusterResponseContent) SetClusterName(v string) {
	o.ClusterName = v
}

// GetRegion returns the Region field value
func (o *DescribeClusterResponseContent) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *DescribeClusterResponseContent) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *DescribeClusterResponseContent) SetRegion(v string) {
	o.Region = v
}

// GetVersion returns the Version field value
func (o *DescribeClusterResponseContent) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *DescribeClusterResponseContent) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *DescribeClusterResponseContent) SetVersion(v string) {
	o.Version = v
}

// GetCloudFormationStackStatus returns the CloudFormationStackStatus field value
func (o *DescribeClusterResponseContent) GetCloudFormationStackStatus() CloudFormationStackStatus {
	if o == nil {
		var ret CloudFormationStackStatus
		return ret
	}

	return o.CloudFormationStackStatus
}

// GetCloudFormationStackStatusOk returns a tuple with the CloudFormationStackStatus field value
// and a boolean to check if the value has been set.
func (o *DescribeClusterResponseContent) GetCloudFormationStackStatusOk() (*CloudFormationStackStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudFormationStackStatus, true
}

// SetCloudFormationStackStatus sets field value
func (o *DescribeClusterResponseContent) SetCloudFormationStackStatus(v CloudFormationStackStatus) {
	o.CloudFormationStackStatus = v
}

// GetClusterStatus returns the ClusterStatus field value
func (o *DescribeClusterResponseContent) GetClusterStatus() ClusterStatus {
	if o == nil {
		var ret ClusterStatus
		return ret
	}

	return o.ClusterStatus
}

// GetClusterStatusOk returns a tuple with the ClusterStatus field value
// and a boolean to check if the value has been set.
func (o *DescribeClusterResponseContent) GetClusterStatusOk() (*ClusterStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterStatus, true
}

// SetClusterStatus sets field value
func (o *DescribeClusterResponseContent) SetClusterStatus(v ClusterStatus) {
	o.ClusterStatus = v
}

// GetScheduler returns the Scheduler field value if set, zero value otherwise.
func (o *DescribeClusterResponseContent) GetScheduler() Scheduler {
	if o == nil || IsNil(o.Scheduler) {
		var ret Scheduler
		return ret
	}
	return *o.Scheduler
}

// GetSchedulerOk returns a tuple with the Scheduler field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeClusterResponseContent) GetSchedulerOk() (*Scheduler, bool) {
	if o == nil || IsNil(o.Scheduler) {
		return nil, false
	}
	return o.Scheduler, true
}

// HasScheduler returns a boolean if a field has been set.
func (o *DescribeClusterResponseContent) HasScheduler() bool {
	if o != nil && !IsNil(o.Scheduler) {
		return true
	}

	return false
}

// SetScheduler gets a reference to the given Scheduler and assigns it to the Scheduler field.
func (o *DescribeClusterResponseContent) SetScheduler(v Scheduler) {
	o.Scheduler = &v
}

// GetCloudformationStackArn returns the CloudformationStackArn field value
func (o *DescribeClusterResponseContent) GetCloudformationStackArn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudformationStackArn
}

// GetCloudformationStackArnOk returns a tuple with the CloudformationStackArn field value
// and a boolean to check if the value has been set.
func (o *DescribeClusterResponseContent) GetCloudformationStackArnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudformationStackArn, true
}

// SetCloudformationStackArn sets field value
func (o *DescribeClusterResponseContent) SetCloudformationStackArn(v string) {
	o.CloudformationStackArn = v
}

// GetCreationTime returns the CreationTime field value
func (o *DescribeClusterResponseContent) GetCreationTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value
// and a boolean to check if the value has been set.
func (o *DescribeClusterResponseContent) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreationTime, true
}

// SetCreationTime sets field value
func (o *DescribeClusterResponseContent) SetCreationTime(v time.Time) {
	o.CreationTime = v
}

// GetLastUpdatedTime returns the LastUpdatedTime field value
func (o *DescribeClusterResponseContent) GetLastUpdatedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastUpdatedTime
}

// GetLastUpdatedTimeOk returns a tuple with the LastUpdatedTime field value
// and a boolean to check if the value has been set.
func (o *DescribeClusterResponseContent) GetLastUpdatedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdatedTime, true
}

// SetLastUpdatedTime sets field value
func (o *DescribeClusterResponseContent) SetLastUpdatedTime(v time.Time) {
	o.LastUpdatedTime = v
}

// GetClusterConfiguration returns the ClusterConfiguration field value
func (o *DescribeClusterResponseContent) GetClusterConfiguration() ClusterConfigurationStructure {
	if o == nil {
		var ret ClusterConfigurationStructure
		return ret
	}

	return o.ClusterConfiguration
}

// GetClusterConfigurationOk returns a tuple with the ClusterConfiguration field value
// and a boolean to check if the value has been set.
func (o *DescribeClusterResponseContent) GetClusterConfigurationOk() (*ClusterConfigurationStructure, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterConfiguration, true
}

// SetClusterConfiguration sets field value
func (o *DescribeClusterResponseContent) SetClusterConfiguration(v ClusterConfigurationStructure) {
	o.ClusterConfiguration = v
}

// GetComputeFleetStatus returns the ComputeFleetStatus field value
func (o *DescribeClusterResponseContent) GetComputeFleetStatus() ComputeFleetStatus {
	if o == nil {
		var ret ComputeFleetStatus
		return ret
	}

	return o.ComputeFleetStatus
}

// GetComputeFleetStatusOk returns a tuple with the ComputeFleetStatus field value
// and a boolean to check if the value has been set.
func (o *DescribeClusterResponseContent) GetComputeFleetStatusOk() (*ComputeFleetStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ComputeFleetStatus, true
}

// SetComputeFleetStatus sets field value
func (o *DescribeClusterResponseContent) SetComputeFleetStatus(v ComputeFleetStatus) {
	o.ComputeFleetStatus = v
}

// GetTags returns the Tags field value
func (o *DescribeClusterResponseContent) GetTags() []Tag {
	if o == nil {
		var ret []Tag
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *DescribeClusterResponseContent) GetTagsOk() ([]Tag, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *DescribeClusterResponseContent) SetTags(v []Tag) {
	o.Tags = v
}

// GetHeadNode returns the HeadNode field value if set, zero value otherwise.
func (o *DescribeClusterResponseContent) GetHeadNode() EC2Instance {
	if o == nil || IsNil(o.HeadNode) {
		var ret EC2Instance
		return ret
	}
	return *o.HeadNode
}

// GetHeadNodeOk returns a tuple with the HeadNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeClusterResponseContent) GetHeadNodeOk() (*EC2Instance, bool) {
	if o == nil || IsNil(o.HeadNode) {
		return nil, false
	}
	return o.HeadNode, true
}

// HasHeadNode returns a boolean if a field has been set.
func (o *DescribeClusterResponseContent) HasHeadNode() bool {
	if o != nil && !IsNil(o.HeadNode) {
		return true
	}

	return false
}

// SetHeadNode gets a reference to the given EC2Instance and assigns it to the HeadNode field.
func (o *DescribeClusterResponseContent) SetHeadNode(v EC2Instance) {
	o.HeadNode = &v
}

// GetLoginNodes returns the LoginNodes field value if set, zero value otherwise.
func (o *DescribeClusterResponseContent) GetLoginNodes() LoginNodesPool {
	if o == nil || IsNil(o.LoginNodes) {
		var ret LoginNodesPool
		return ret
	}
	return *o.LoginNodes
}

// GetLoginNodesOk returns a tuple with the LoginNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeClusterResponseContent) GetLoginNodesOk() (*LoginNodesPool, bool) {
	if o == nil || IsNil(o.LoginNodes) {
		return nil, false
	}
	return o.LoginNodes, true
}

// HasLoginNodes returns a boolean if a field has been set.
func (o *DescribeClusterResponseContent) HasLoginNodes() bool {
	if o != nil && !IsNil(o.LoginNodes) {
		return true
	}

	return false
}

// SetLoginNodes gets a reference to the given LoginNodesPool and assigns it to the LoginNodes field.
func (o *DescribeClusterResponseContent) SetLoginNodes(v LoginNodesPool) {
	o.LoginNodes = &v
}

// GetFailures returns the Failures field value if set, zero value otherwise.
func (o *DescribeClusterResponseContent) GetFailures() []Failure {
	if o == nil || IsNil(o.Failures) {
		var ret []Failure
		return ret
	}
	return o.Failures
}

// GetFailuresOk returns a tuple with the Failures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeClusterResponseContent) GetFailuresOk() ([]Failure, bool) {
	if o == nil || IsNil(o.Failures) {
		return nil, false
	}
	return o.Failures, true
}

// HasFailures returns a boolean if a field has been set.
func (o *DescribeClusterResponseContent) HasFailures() bool {
	if o != nil && !IsNil(o.Failures) {
		return true
	}

	return false
}

// SetFailures gets a reference to the given []Failure and assigns it to the Failures field.
func (o *DescribeClusterResponseContent) SetFailures(v []Failure) {
	o.Failures = v
}

func (o DescribeClusterResponseContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeClusterResponseContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["clusterName"] = o.ClusterName
	toSerialize["region"] = o.Region
	toSerialize["version"] = o.Version
	toSerialize["cloudFormationStackStatus"] = o.CloudFormationStackStatus
	toSerialize["clusterStatus"] = o.ClusterStatus
	if !IsNil(o.Scheduler) {
		toSerialize["scheduler"] = o.Scheduler
	}
	toSerialize["cloudformationStackArn"] = o.CloudformationStackArn
	toSerialize["creationTime"] = o.CreationTime
	toSerialize["lastUpdatedTime"] = o.LastUpdatedTime
	toSerialize["clusterConfiguration"] = o.ClusterConfiguration
	toSerialize["computeFleetStatus"] = o.ComputeFleetStatus
	toSerialize["tags"] = o.Tags
	if !IsNil(o.HeadNode) {
		toSerialize["headNode"] = o.HeadNode
	}
	if !IsNil(o.LoginNodes) {
		toSerialize["loginNodes"] = o.LoginNodes
	}
	if !IsNil(o.Failures) {
		toSerialize["failures"] = o.Failures
	}
	return toSerialize, nil
}

func (o *DescribeClusterResponseContent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"clusterName",
		"region",
		"version",
		"cloudFormationStackStatus",
		"clusterStatus",
		"cloudformationStackArn",
		"creationTime",
		"lastUpdatedTime",
		"clusterConfiguration",
		"computeFleetStatus",
		"tags",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeClusterResponseContent := _DescribeClusterResponseContent{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDescribeClusterResponseContent)

	if err != nil {
		return err
	}

	*o = DescribeClusterResponseContent(varDescribeClusterResponseContent)

	return err
}

type NullableDescribeClusterResponseContent struct {
	value *DescribeClusterResponseContent
	isSet bool
}

func (v NullableDescribeClusterResponseContent) Get() *DescribeClusterResponseContent {
	return v.value
}

func (v *NullableDescribeClusterResponseContent) Set(val *DescribeClusterResponseContent) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeClusterResponseContent) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeClusterResponseContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeClusterResponseContent(val *DescribeClusterResponseContent) *NullableDescribeClusterResponseContent {
	return &NullableDescribeClusterResponseContent{value: val, isSet: true}
}

func (v NullableDescribeClusterResponseContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeClusterResponseContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
