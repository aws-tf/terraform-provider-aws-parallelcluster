/*
ParallelCluster

ParallelCluster API

API version: 3.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// CloudFormationResourceStatus the model 'CloudFormationResourceStatus'
type CloudFormationResourceStatus string

// List of CloudFormationResourceStatus
const (
	CLOUDFORMATIONRESOURCESTATUS_CREATE_IN_PROGRESS CloudFormationResourceStatus = "CREATE_IN_PROGRESS"
	CLOUDFORMATIONRESOURCESTATUS_CREATE_FAILED CloudFormationResourceStatus = "CREATE_FAILED"
	CLOUDFORMATIONRESOURCESTATUS_CREATE_COMPLETE CloudFormationResourceStatus = "CREATE_COMPLETE"
	CLOUDFORMATIONRESOURCESTATUS_DELETE_IN_PROGRESS CloudFormationResourceStatus = "DELETE_IN_PROGRESS"
	CLOUDFORMATIONRESOURCESTATUS_DELETE_FAILED CloudFormationResourceStatus = "DELETE_FAILED"
	CLOUDFORMATIONRESOURCESTATUS_DELETE_COMPLETE CloudFormationResourceStatus = "DELETE_COMPLETE"
	CLOUDFORMATIONRESOURCESTATUS_DELETE_SKIPPED CloudFormationResourceStatus = "DELETE_SKIPPED"
	CLOUDFORMATIONRESOURCESTATUS_UPDATE_IN_PROGRESS CloudFormationResourceStatus = "UPDATE_IN_PROGRESS"
	CLOUDFORMATIONRESOURCESTATUS_UPDATE_FAILED CloudFormationResourceStatus = "UPDATE_FAILED"
	CLOUDFORMATIONRESOURCESTATUS_UPDATE_COMPLETE CloudFormationResourceStatus = "UPDATE_COMPLETE"
	CLOUDFORMATIONRESOURCESTATUS_IMPORT_FAILED CloudFormationResourceStatus = "IMPORT_FAILED"
	CLOUDFORMATIONRESOURCESTATUS_IMPORT_COMPLETE CloudFormationResourceStatus = "IMPORT_COMPLETE"
	CLOUDFORMATIONRESOURCESTATUS_IMPORT_IN_PROGRESS CloudFormationResourceStatus = "IMPORT_IN_PROGRESS"
	CLOUDFORMATIONRESOURCESTATUS_IMPORT_ROLLBACK_IN_PROGRESS CloudFormationResourceStatus = "IMPORT_ROLLBACK_IN_PROGRESS"
	CLOUDFORMATIONRESOURCESTATUS_IMPORT_ROLLBACK_FAILED CloudFormationResourceStatus = "IMPORT_ROLLBACK_FAILED"
	CLOUDFORMATIONRESOURCESTATUS_IMPORT_ROLLBACK_COMPLETE CloudFormationResourceStatus = "IMPORT_ROLLBACK_COMPLETE"
)

// All allowed values of CloudFormationResourceStatus enum
var AllowedCloudFormationResourceStatusEnumValues = []CloudFormationResourceStatus{
	"CREATE_IN_PROGRESS",
	"CREATE_FAILED",
	"CREATE_COMPLETE",
	"DELETE_IN_PROGRESS",
	"DELETE_FAILED",
	"DELETE_COMPLETE",
	"DELETE_SKIPPED",
	"UPDATE_IN_PROGRESS",
	"UPDATE_FAILED",
	"UPDATE_COMPLETE",
	"IMPORT_FAILED",
	"IMPORT_COMPLETE",
	"IMPORT_IN_PROGRESS",
	"IMPORT_ROLLBACK_IN_PROGRESS",
	"IMPORT_ROLLBACK_FAILED",
	"IMPORT_ROLLBACK_COMPLETE",
}

func (v *CloudFormationResourceStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CloudFormationResourceStatus(value)
	for _, existing := range AllowedCloudFormationResourceStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CloudFormationResourceStatus", value)
}

// NewCloudFormationResourceStatusFromValue returns a pointer to a valid CloudFormationResourceStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCloudFormationResourceStatusFromValue(v string) (*CloudFormationResourceStatus, error) {
	ev := CloudFormationResourceStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CloudFormationResourceStatus: valid values are %v", v, AllowedCloudFormationResourceStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CloudFormationResourceStatus) IsValid() bool {
	for _, existing := range AllowedCloudFormationResourceStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CloudFormationResourceStatus value
func (v CloudFormationResourceStatus) Ptr() *CloudFormationResourceStatus {
	return &v
}

type NullableCloudFormationResourceStatus struct {
	value *CloudFormationResourceStatus
	isSet bool
}

func (v NullableCloudFormationResourceStatus) Get() *CloudFormationResourceStatus {
	return v.value
}

func (v *NullableCloudFormationResourceStatus) Set(val *CloudFormationResourceStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudFormationResourceStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudFormationResourceStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudFormationResourceStatus(val *CloudFormationResourceStatus) *NullableCloudFormationResourceStatus {
	return &NullableCloudFormationResourceStatus{value: val, isSet: true}
}

func (v NullableCloudFormationResourceStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudFormationResourceStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

