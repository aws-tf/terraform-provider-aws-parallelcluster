/*
ParallelCluster

ParallelCluster API

API version: 3.10.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateClusterResponseContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateClusterResponseContent{}

// CreateClusterResponseContent struct for CreateClusterResponseContent
type CreateClusterResponseContent struct {
	Cluster ClusterInfoSummary `json:"cluster"`
	// List of messages collected during cluster config validation whose level is lower than the 'validationFailureLevel' set by the user.
	ValidationMessages []ConfigValidationMessage `json:"validationMessages,omitempty"`
}

type _CreateClusterResponseContent CreateClusterResponseContent

// NewCreateClusterResponseContent instantiates a new CreateClusterResponseContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateClusterResponseContent(cluster ClusterInfoSummary) *CreateClusterResponseContent {
	this := CreateClusterResponseContent{}
	this.Cluster = cluster
	return &this
}

// NewCreateClusterResponseContentWithDefaults instantiates a new CreateClusterResponseContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateClusterResponseContentWithDefaults() *CreateClusterResponseContent {
	this := CreateClusterResponseContent{}
	return &this
}

// GetCluster returns the Cluster field value
func (o *CreateClusterResponseContent) GetCluster() ClusterInfoSummary {
	if o == nil {
		var ret ClusterInfoSummary
		return ret
	}

	return o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value
// and a boolean to check if the value has been set.
func (o *CreateClusterResponseContent) GetClusterOk() (*ClusterInfoSummary, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cluster, true
}

// SetCluster sets field value
func (o *CreateClusterResponseContent) SetCluster(v ClusterInfoSummary) {
	o.Cluster = v
}

// GetValidationMessages returns the ValidationMessages field value if set, zero value otherwise.
func (o *CreateClusterResponseContent) GetValidationMessages() []ConfigValidationMessage {
	if o == nil || IsNil(o.ValidationMessages) {
		var ret []ConfigValidationMessage
		return ret
	}
	return o.ValidationMessages
}

// GetValidationMessagesOk returns a tuple with the ValidationMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterResponseContent) GetValidationMessagesOk() ([]ConfigValidationMessage, bool) {
	if o == nil || IsNil(o.ValidationMessages) {
		return nil, false
	}
	return o.ValidationMessages, true
}

// HasValidationMessages returns a boolean if a field has been set.
func (o *CreateClusterResponseContent) HasValidationMessages() bool {
	if o != nil && !IsNil(o.ValidationMessages) {
		return true
	}

	return false
}

// SetValidationMessages gets a reference to the given []ConfigValidationMessage and assigns it to the ValidationMessages field.
func (o *CreateClusterResponseContent) SetValidationMessages(v []ConfigValidationMessage) {
	o.ValidationMessages = v
}

func (o CreateClusterResponseContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateClusterResponseContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cluster"] = o.Cluster
	if !IsNil(o.ValidationMessages) {
		toSerialize["validationMessages"] = o.ValidationMessages
	}
	return toSerialize, nil
}

func (o *CreateClusterResponseContent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cluster",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateClusterResponseContent := _CreateClusterResponseContent{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateClusterResponseContent)

	if err != nil {
		return err
	}

	*o = CreateClusterResponseContent(varCreateClusterResponseContent)

	return err
}

type NullableCreateClusterResponseContent struct {
	value *CreateClusterResponseContent
	isSet bool
}

func (v NullableCreateClusterResponseContent) Get() *CreateClusterResponseContent {
	return v.value
}

func (v *NullableCreateClusterResponseContent) Set(val *CreateClusterResponseContent) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateClusterResponseContent) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateClusterResponseContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateClusterResponseContent(val *CreateClusterResponseContent) *NullableCreateClusterResponseContent {
	return &NullableCreateClusterResponseContent{value: val, isSet: true}
}

func (v NullableCreateClusterResponseContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateClusterResponseContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
