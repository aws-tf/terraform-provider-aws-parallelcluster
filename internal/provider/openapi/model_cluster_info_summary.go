/*
ParallelCluster

ParallelCluster API

API version: 3.11.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ClusterInfoSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterInfoSummary{}

// ClusterInfoSummary struct for ClusterInfoSummary
type ClusterInfoSummary struct {
	// Name of the cluster.
	ClusterName string `json:"clusterName" validate:"regexp=^[a-zA-Z][a-zA-Z0-9-]+$"`
	// AWS region where the cluster is created.
	Region string `json:"region"`
	// ParallelCluster version used to create the cluster.
	Version string `json:"version"`
	// ARN of the main CloudFormation stack.
	CloudformationStackArn string `json:"cloudformationStackArn"`
	CloudformationStackStatus CloudFormationStackStatus `json:"cloudformationStackStatus"`
	ClusterStatus ClusterStatus `json:"clusterStatus"`
	Scheduler *Scheduler `json:"scheduler,omitempty"`
}

type _ClusterInfoSummary ClusterInfoSummary

// NewClusterInfoSummary instantiates a new ClusterInfoSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterInfoSummary(clusterName string, region string, version string, cloudformationStackArn string, cloudformationStackStatus CloudFormationStackStatus, clusterStatus ClusterStatus) *ClusterInfoSummary {
	this := ClusterInfoSummary{}
	this.ClusterName = clusterName
	this.Region = region
	this.Version = version
	this.CloudformationStackArn = cloudformationStackArn
	this.CloudformationStackStatus = cloudformationStackStatus
	this.ClusterStatus = clusterStatus
	return &this
}

// NewClusterInfoSummaryWithDefaults instantiates a new ClusterInfoSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterInfoSummaryWithDefaults() *ClusterInfoSummary {
	this := ClusterInfoSummary{}
	return &this
}

// GetClusterName returns the ClusterName field value
func (o *ClusterInfoSummary) GetClusterName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value
// and a boolean to check if the value has been set.
func (o *ClusterInfoSummary) GetClusterNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterName, true
}

// SetClusterName sets field value
func (o *ClusterInfoSummary) SetClusterName(v string) {
	o.ClusterName = v
}

// GetRegion returns the Region field value
func (o *ClusterInfoSummary) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *ClusterInfoSummary) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *ClusterInfoSummary) SetRegion(v string) {
	o.Region = v
}

// GetVersion returns the Version field value
func (o *ClusterInfoSummary) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *ClusterInfoSummary) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *ClusterInfoSummary) SetVersion(v string) {
	o.Version = v
}

// GetCloudformationStackArn returns the CloudformationStackArn field value
func (o *ClusterInfoSummary) GetCloudformationStackArn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudformationStackArn
}

// GetCloudformationStackArnOk returns a tuple with the CloudformationStackArn field value
// and a boolean to check if the value has been set.
func (o *ClusterInfoSummary) GetCloudformationStackArnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudformationStackArn, true
}

// SetCloudformationStackArn sets field value
func (o *ClusterInfoSummary) SetCloudformationStackArn(v string) {
	o.CloudformationStackArn = v
}

// GetCloudformationStackStatus returns the CloudformationStackStatus field value
func (o *ClusterInfoSummary) GetCloudformationStackStatus() CloudFormationStackStatus {
	if o == nil {
		var ret CloudFormationStackStatus
		return ret
	}

	return o.CloudformationStackStatus
}

// GetCloudformationStackStatusOk returns a tuple with the CloudformationStackStatus field value
// and a boolean to check if the value has been set.
func (o *ClusterInfoSummary) GetCloudformationStackStatusOk() (*CloudFormationStackStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudformationStackStatus, true
}

// SetCloudformationStackStatus sets field value
func (o *ClusterInfoSummary) SetCloudformationStackStatus(v CloudFormationStackStatus) {
	o.CloudformationStackStatus = v
}

// GetClusterStatus returns the ClusterStatus field value
func (o *ClusterInfoSummary) GetClusterStatus() ClusterStatus {
	if o == nil {
		var ret ClusterStatus
		return ret
	}

	return o.ClusterStatus
}

// GetClusterStatusOk returns a tuple with the ClusterStatus field value
// and a boolean to check if the value has been set.
func (o *ClusterInfoSummary) GetClusterStatusOk() (*ClusterStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterStatus, true
}

// SetClusterStatus sets field value
func (o *ClusterInfoSummary) SetClusterStatus(v ClusterStatus) {
	o.ClusterStatus = v
}

// GetScheduler returns the Scheduler field value if set, zero value otherwise.
func (o *ClusterInfoSummary) GetScheduler() Scheduler {
	if o == nil || IsNil(o.Scheduler) {
		var ret Scheduler
		return ret
	}
	return *o.Scheduler
}

// GetSchedulerOk returns a tuple with the Scheduler field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterInfoSummary) GetSchedulerOk() (*Scheduler, bool) {
	if o == nil || IsNil(o.Scheduler) {
		return nil, false
	}
	return o.Scheduler, true
}

// HasScheduler returns a boolean if a field has been set.
func (o *ClusterInfoSummary) HasScheduler() bool {
	if o != nil && !IsNil(o.Scheduler) {
		return true
	}

	return false
}

// SetScheduler gets a reference to the given Scheduler and assigns it to the Scheduler field.
func (o *ClusterInfoSummary) SetScheduler(v Scheduler) {
	o.Scheduler = &v
}

func (o ClusterInfoSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterInfoSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["clusterName"] = o.ClusterName
	toSerialize["region"] = o.Region
	toSerialize["version"] = o.Version
	toSerialize["cloudformationStackArn"] = o.CloudformationStackArn
	toSerialize["cloudformationStackStatus"] = o.CloudformationStackStatus
	toSerialize["clusterStatus"] = o.ClusterStatus
	if !IsNil(o.Scheduler) {
		toSerialize["scheduler"] = o.Scheduler
	}
	return toSerialize, nil
}

func (o *ClusterInfoSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"clusterName",
		"region",
		"version",
		"cloudformationStackArn",
		"cloudformationStackStatus",
		"clusterStatus",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClusterInfoSummary := _ClusterInfoSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClusterInfoSummary)

	if err != nil {
		return err
	}

	*o = ClusterInfoSummary(varClusterInfoSummary)

	return err
}

type NullableClusterInfoSummary struct {
	value *ClusterInfoSummary
	isSet bool
}

func (v NullableClusterInfoSummary) Get() *ClusterInfoSummary {
	return v.value
}

func (v *NullableClusterInfoSummary) Set(val *ClusterInfoSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterInfoSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterInfoSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterInfoSummary(val *ClusterInfoSummary) *NullableClusterInfoSummary {
	return &NullableClusterInfoSummary{value: val, isSet: true}
}

func (v NullableClusterInfoSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterInfoSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


