/*
ParallelCluster

ParallelCluster API

API version: 3.11.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// ClusterStatusFilteringOption the model 'ClusterStatusFilteringOption'
type ClusterStatusFilteringOption string

// List of ClusterStatusFilteringOption
const (
	CLUSTERSTATUSFILTERINGOPTION_CREATE_IN_PROGRESS ClusterStatusFilteringOption = "CREATE_IN_PROGRESS"
	CLUSTERSTATUSFILTERINGOPTION_CREATE_FAILED ClusterStatusFilteringOption = "CREATE_FAILED"
	CLUSTERSTATUSFILTERINGOPTION_CREATE_COMPLETE ClusterStatusFilteringOption = "CREATE_COMPLETE"
	CLUSTERSTATUSFILTERINGOPTION_DELETE_IN_PROGRESS ClusterStatusFilteringOption = "DELETE_IN_PROGRESS"
	CLUSTERSTATUSFILTERINGOPTION_DELETE_FAILED ClusterStatusFilteringOption = "DELETE_FAILED"
	CLUSTERSTATUSFILTERINGOPTION_UPDATE_IN_PROGRESS ClusterStatusFilteringOption = "UPDATE_IN_PROGRESS"
	CLUSTERSTATUSFILTERINGOPTION_UPDATE_COMPLETE ClusterStatusFilteringOption = "UPDATE_COMPLETE"
	CLUSTERSTATUSFILTERINGOPTION_UPDATE_FAILED ClusterStatusFilteringOption = "UPDATE_FAILED"
)

// All allowed values of ClusterStatusFilteringOption enum
var AllowedClusterStatusFilteringOptionEnumValues = []ClusterStatusFilteringOption{
	"CREATE_IN_PROGRESS",
	"CREATE_FAILED",
	"CREATE_COMPLETE",
	"DELETE_IN_PROGRESS",
	"DELETE_FAILED",
	"UPDATE_IN_PROGRESS",
	"UPDATE_COMPLETE",
	"UPDATE_FAILED",
}

func (v *ClusterStatusFilteringOption) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ClusterStatusFilteringOption(value)
	for _, existing := range AllowedClusterStatusFilteringOptionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ClusterStatusFilteringOption", value)
}

// NewClusterStatusFilteringOptionFromValue returns a pointer to a valid ClusterStatusFilteringOption
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewClusterStatusFilteringOptionFromValue(v string) (*ClusterStatusFilteringOption, error) {
	ev := ClusterStatusFilteringOption(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ClusterStatusFilteringOption: valid values are %v", v, AllowedClusterStatusFilteringOptionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ClusterStatusFilteringOption) IsValid() bool {
	for _, existing := range AllowedClusterStatusFilteringOptionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ClusterStatusFilteringOption value
func (v ClusterStatusFilteringOption) Ptr() *ClusterStatusFilteringOption {
	return &v
}

type NullableClusterStatusFilteringOption struct {
	value *ClusterStatusFilteringOption
	isSet bool
}

func (v NullableClusterStatusFilteringOption) Get() *ClusterStatusFilteringOption {
	return v.value
}

func (v *NullableClusterStatusFilteringOption) Set(val *ClusterStatusFilteringOption) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterStatusFilteringOption) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterStatusFilteringOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterStatusFilteringOption(val *ClusterStatusFilteringOption) *NullableClusterStatusFilteringOption {
	return &NullableClusterStatusFilteringOption{value: val, isSet: true}
}

func (v NullableClusterStatusFilteringOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterStatusFilteringOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

