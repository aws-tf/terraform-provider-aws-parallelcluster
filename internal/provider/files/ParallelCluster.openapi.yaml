openapi: 3.0.2
info:
  title: ParallelCluster
  version: 3.7.0
  description: ParallelCluster API
paths:
  /v3/clusters:
    get:
      description: Retrieve the list of existing clusters.
      operationId: ListClusters
      parameters:
        - name: region
          in: query
          description: List clusters deployed to a given AWS Region.
          schema:
            type: string
            description: List clusters deployed to a given AWS Region.
        - name: nextToken
          in: query
          description: Token to use for paginated requests.
          schema:
            type: string
            description: Token to use for paginated requests.
        - name: clusterStatus
          in: query
          description: Filter by cluster status. (Defaults to all clusters.)
          style: form
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ClusterStatusFilteringOption'
            uniqueItems: true
            description: Filter by cluster status. (Defaults to all clusters.)
          explode: true
      responses:
        "200":
          description: ListClusters 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponseContent'
        "400":
          description: BadRequestException 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestExceptionResponseContent'
        "401":
          description: UnauthorizedClientError 401 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientErrorResponseContent'
        "429":
          description: LimitExceededException 429 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededExceptionResponseContent'
        "500":
          description: InternalServiceException 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceExceptionResponseContent'
      tags:
        - Cluster Operations
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ParallelClusterFunction.Arn}/invocations
        credentials:
          Fn::Sub: ${APIGatewayExecutionRole.Arn}
        payloadFormatVersion: "2.0"
    post:
      description: Create a managed cluster in a given region.
      operationId: CreateCluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterRequestContent'
        required: true
      parameters:
        - name: region
          in: query
          description: AWS Region that the operation corresponds to.
          schema:
            type: string
            description: AWS Region that the operation corresponds to.
        - name: suppressValidators
          in: query
          description: 'Identifies one or more config validators to suppress. Format: (ALL|type:[A-Za-z0-9]+)'
          style: form
          schema:
            type: array
            items:
              type: string
              pattern: ^(ALL|type:[A-Za-z0-9]+)$
            uniqueItems: true
            description: 'Identifies one or more config validators to suppress. Format: (ALL|type:[A-Za-z0-9]+)'
          explode: true
        - name: validationFailureLevel
          in: query
          description: Min validation level that will cause the creation to fail. (Defaults to 'ERROR'.)
          schema:
            $ref: '#/components/schemas/ValidationLevel'
        - name: dryrun
          in: query
          description: Only perform request validation without creating any resource. May be used to validate the cluster configuration. (Defaults to 'false'.)
          schema:
            type: boolean
            description: Only perform request validation without creating any resource. May be used to validate the cluster configuration. (Defaults to 'false'.)
        - name: rollbackOnFailure
          in: query
          description: When set it automatically initiates a cluster stack rollback on failures. (Defaults to 'true'.)
          schema:
            type: boolean
            description: When set it automatically initiates a cluster stack rollback on failures. (Defaults to 'true'.)
      responses:
        "202":
          description: CreateCluster 202 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClusterResponseContent'
        "400":
          description: CreateClusterBadRequestException 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClusterBadRequestExceptionResponseContent'
        "401":
          description: UnauthorizedClientError 401 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientErrorResponseContent'
        "409":
          description: ConflictException 409 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictExceptionResponseContent'
        "412":
          description: DryrunOperationException 412 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DryrunOperationExceptionResponseContent'
        "429":
          description: LimitExceededException 429 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededExceptionResponseContent'
        "500":
          description: InternalServiceException 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceExceptionResponseContent'
      tags:
        - Cluster Operations
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ParallelClusterFunction.Arn}/invocations
        credentials:
          Fn::Sub: ${APIGatewayExecutionRole.Arn}
        payloadFormatVersion: "2.0"
components:
  schemas:
    BadRequestExceptionResponseContent:
      type: object
      description: This exception is thrown when a client calls an API with wrong parameters.
      properties:
        message:
          type: string
    Change:
      type: object
      properties:
        parameter:
          type: string
        currentValue:
          type: string
        requestedValue:
          type: string
    CloudFormationStackStatus:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - CREATE_FAILED
        - CREATE_COMPLETE
        - ROLLBACK_IN_PROGRESS
        - ROLLBACK_FAILED
        - ROLLBACK_COMPLETE
        - DELETE_IN_PROGRESS
        - DELETE_FAILED
        - DELETE_COMPLETE
        - UPDATE_IN_PROGRESS
        - UPDATE_COMPLETE_CLEANUP_IN_PROGRESS
        - UPDATE_COMPLETE
        - UPDATE_ROLLBACK_IN_PROGRESS
        - UPDATE_ROLLBACK_FAILED
        - UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS
        - UPDATE_ROLLBACK_COMPLETE
    ClusterConfigurationStructure:
      type: object
      properties:
        url:
          type: string
          description: URL of the cluster configuration file.
    ClusterInfoSummary:
      type: object
      properties:
        clusterName:
          type: string
          pattern: ^[a-zA-Z][a-zA-Z0-9-]+$
          description: Name of the cluster.
        region:
          type: string
          description: AWS region where the cluster is created.
        version:
          type: string
          description: ParallelCluster version used to create the cluster.
        cloudformationStackArn:
          type: string
          description: ARN of the main CloudFormation stack.
        cloudformationStackStatus:
          $ref: '#/components/schemas/CloudFormationStackStatus'
        clusterStatus:
          $ref: '#/components/schemas/ClusterStatus'
        scheduler:
          $ref: '#/components/schemas/Scheduler'
      required:
        - cloudformationStackArn
        - cloudformationStackStatus
        - clusterName
        - clusterStatus
        - region
        - version
    ClusterStatus:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - CREATE_FAILED
        - CREATE_COMPLETE
        - DELETE_IN_PROGRESS
        - DELETE_FAILED
        - DELETE_COMPLETE
        - UPDATE_IN_PROGRESS
        - UPDATE_COMPLETE
        - UPDATE_FAILED
    ClusterStatusFilteringOption:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - CREATE_FAILED
        - CREATE_COMPLETE
        - DELETE_IN_PROGRESS
        - DELETE_FAILED
        - UPDATE_IN_PROGRESS
        - UPDATE_COMPLETE
        - UPDATE_FAILED
    ConfigValidationMessage:
      type: object
      properties:
        id:
          type: string
          description: Id of the validator.
        type:
          type: string
          description: Type of the validator.
        level:
          $ref: '#/components/schemas/ValidationLevel'
        message:
          type: string
          description: Validation message
    ConflictExceptionResponseContent:
      type: object
      description: This exception is thrown when a client request to create/modify content would result in a conflict.
      properties:
        message:
          type: string
    CreateClusterBadRequestExceptionResponseContent:
      type: object
      description: This exception is thrown when a client calls the CreateCluster API with an invalid request. This includes an error due to invalid cluster configuration.
      properties:
        message:
          type: string
        configurationValidationErrors:
          type: array
          items:
            $ref: '#/components/schemas/ConfigValidationMessage'
    CreateClusterRequestContent:
      type: object
      properties:
        clusterName:
          type: string
          pattern: ^[a-zA-Z][a-zA-Z0-9-]+$
          description: Name of the cluster that will be created.
        clusterConfiguration:
          type: string
          description: Cluster configuration as a YAML document.
      required:
        - clusterConfiguration
        - clusterName
    CreateClusterResponseContent:
      type: object
      properties:
        cluster:
          $ref: '#/components/schemas/ClusterInfoSummary'
        validationMessages:
          type: array
          items:
            $ref: '#/components/schemas/ConfigValidationMessage'
          description: List of messages collected during cluster config validation whose level is lower than the 'validationFailureLevel' set by the user.
      required:
        - cluster
    DeleteClusterResponseContent:
      type: object
      properties:
        cluster:
          $ref: '#/components/schemas/ClusterInfoSummary'
      required:
        - cluster
    DryrunOperationExceptionResponseContent:
      type: object
      description: Communicates that the operation would have succeeded without the dryrun flag.
      properties:
        message:
          type: string
        changeSet:
          type: array
          items:
            $ref: '#/components/schemas/Change'
          description: List of configuration changes requested by the operation.
        validationMessages:
          type: array
          items:
            $ref: '#/components/schemas/ConfigValidationMessage'
          description: List of messages collected during cluster config validation whose level is lower than the 'validationFailureLevel' set by the user.
    InternalServiceExceptionResponseContent:
      type: object
      description: This exception is thrown on an unhandled service error.
      properties:
        message:
          type: string
    LimitExceededExceptionResponseContent:
      type: object
      description: The client is sending more than the allowed number of requests per unit of time.
      properties:
        message:
          type: string
    ListClustersResponseContent:
      type: object
      properties:
        nextToken:
          type: string
          description: Token to use for paginated requests.
        clusters:
          type: array
          items:
            $ref: '#/components/schemas/ClusterInfoSummary'
      required:
        - clusters
    Metadata:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
    Scheduler:
      type: object
      properties:
        type:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
      required:
        - type
    UnauthorizedClientErrorResponseContent:
      type: object
      description: This exception is thrown when the client is not authorized to perform an action.
      properties:
        message:
          type: string
    ValidationLevel:
      type: string
      enum:
        - INFO
        - WARNING
        - ERROR
  securitySchemes:
    aws.auth.sigv4:
      type: apiKey
      description: AWS Signature Version 4 authentication
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: awsSigv4
security:
  - aws.auth.sigv4: []
